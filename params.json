{"name":"Prosail","tagline":"Python bindings for the PROSAIL canopy reflectance model","body":"<img src=\"http://www.nceo.ac.uk/images/NCEO_logo_lrg.jpg\" scale=50% alt=\"NCEO logo\" align=\"right\" />\r\n<img src=\"http://www.esa.int/esalogo/images/logotype/img_colorlogo_darkblue.gif\" scale=20% alt=\"ESA logo\" align=\"left\" />\r\n\r\n<br/>\r\n<br/>\r\n<br/>\r\n\r\n---\r\n\r\n# PROSAIL Python Bindings\r\n\r\n#### J Gomez-Dans (NCEO & UCL) ``j.gomez-dans@ucl.ac.uk``\r\n\r\n\r\n## Description\r\n\r\nThis repository contains the Python bindings to the PROSPECT and SAIL leaf and \r\ncanopy reflectance models. The code is written in FORTRAN. The original fortran\r\ncode was downloaded from [Jussieu](http://teledetection.ipgp.jussieu.fr/prosail/). \r\nI only added a function to simplify writing the wrappers, and you should go to\r\nthat page to get newer versions of the code. A recent review of the use of both\r\nmodels is availabe in [this paper](http://webdocs.dow.wur.nl/internet/grs/Workshops/Environmental_Applications_Imaging_Spectroscopy/12_Jacquemoud_Prospect/IEEE_Jacquemoud_PROSPECT.pdf)_.\r\n\r\n\r\n## Installing the bindings\r\n\r\nThe installation of the bindings is quite straightforward: unpack the distribution\r\nand run the following command   \r\n\r\n    python setup.py install\r\n    \r\nYou can usually install it to your user's directory (if you haven't got superuser\r\nprivileges) by \r\n\r\n    python setup.py install --user\r\n    \r\n#### **Note**\r\n\r\n    \r\nYou will need a working FORTRAN compiler. I have only tested this with GCC on Linux, but it should work on other systems. You can also pass optimisation flags to the compiler: \r\n    \r\n    python setup.py config_fc  --fcompiler=gnu95   --arch=-march=native --opt=-O3  install --user\r\n    \r\n## Using the bindings\r\n\r\nThe bindings offer several functions, which will be described in detail below:.\r\n\r\n* ``run_prospect``: This function runs the PROSPECT 5B model in Feret et al 2008. The input parameters are the usual ``(n,cab,car,cbrown,cw,cm)`` (e.g. leaf layers, leaf Chlorophyll concentration, leaf Carotenoid concentration, leaf senescent fraction, Equivalent leaf water, leaf dry matter). It returns a spectrum between 400 and 2500 nm.\r\n* ``run_sail``:  The SAILh model, which in this case requires leaf reflectance and transmittance to be fed to the model (e.g. you have already measured these spectra in the field). The rest of the parameters are ``(refl,trans,lai,lidfa,lidfb,rsoil,psoil,hspot,tts,tto,psi,typelidf)``. Additionally, there are two optional parameters, ``soil_spectrum1``, ``soil_spectrum2``, which allow you to set the soil spectra (otherwise, some default spectra get used). Output is a spectrum in the 400-2500 nm range.\r\n* ``run_prosail``: PROSPECT_5B and SAILh coupled together, with input parameters given by ``(n,cab,car,cbrown,cw,cm,lai,lidfa,lidfb,rsoil,psoil,hspot,tts,tto,psi,typelidf)``. Output is a spectrum in the 400-2500 nm range.\r\n\r\n\r\n## The parameters\r\n\r\nThe parameters used by the models and their units are introduced below:\r\n\r\n| Parameter   | Description of parameter        | Units        |Typical min | Typical max |\r\n|-------------|---------------------------------|--------------|------------|-------------|\r\n|   N         | Leaf structure parameter        | N/A          | 0.8        | 2.5         |\r\n|  cab        | Chlorophyll a+b concentration   | ug/cm2       | 0          | 80          |\r\n|  caw        | Equivalent water thickiness     | cm           | 0          | 200         |\r\n|  car        | Carotenoid concentration        | ug/cm2       | 0          | 20          |\r\n|  cbrown     | Brown pigment                   | NA           | 0          | 1           |\r\n|  cm         | Dry matter content              | g/cm2        | 0          | 200         |\r\n|  lai        | Leaf Area Index                 | N/A          | 0          | 10          |\r\n|  lidfa      | Leaf angle distribution         | N/A          | -          | -           |\r\n|  lidfb      | Leaf angle distribution         | N/A          | -          | -           |\r\n|  psoil      | Dry/Wet soil factor             | N/A          | 0          | 1           |\r\n|  rsoil      | Soil brigthness factor          | N/A          | -          | -           |\r\n|  hspot      | Hotspot parameter               | N/A          | -          | -           |\r\n|  tts        | Solar zenith angle              | deg          | 0          | 90          |\r\n|  tto        | Observer zenith angle           | deg          | 0          | 90          |\r\n|  phi        | Relative azimuth angle          | deg          | 0          | 360         |\r\n| typelidf    | Leaf angle distribution type    | Integer      | -          | -           |\r\n\r\n### Specifying the leaf angle distribution\r\n\r\nThe parameter ``typelidf`` regulates the leaf angle distribution family being used. The following options are understood:\r\n\r\n* ``typelidf = 1``: use the two parameter LAD parameterisation, where ``a`` and ``b`` control the average leaf slope and the distribution bimodality, respectively. Typical distributions\r\nare given by the following parameter  choices:\r\n\r\n| LIDF type    | ``LIDFa`` |  ``LIDFb``       |\r\n|--------------|-----------|------------------|\r\n| Planophile   |    1      |  0               |\r\n|   Erectophile|    -1     |   0              |\r\n|   Plagiophile|     0     |  -1              |\r\n|  Extremophile|    0      |  1               |\r\n|   Spherical  |    -0.35  |  -0.15           |\r\n|   Uniform    |     0     |   0              |\r\n\r\n* ``typelidf = 2`` Ellipsoidal distribution, where ``LIDFa`` parameter stands for mean leaf angle (0 degrees is planophile, 90 degrees is erectophile). ``LIDFb`` parameter is ignored.\r\n   \r\n### The soil model\r\n\r\nThe soil model is a fairly simple linear mixture model, where two spectra are mixed and then a brightness term added:\r\n\r\n    rho_soil = rsoil*(psoil*soil_spectrum1+(1-psoil)*soil_spectrum2)\r\n\r\n\r\nThe idea is that one of the spectra is a dry soil and the other a wet soil, so soil moisture is then contorlled by ``psoil``. ``rsoil`` is just a brightness scaling term.\r\n\r\n\r\n","google":"UA-25702318-1","note":"Don't delete this file! It's used internally to help with page regeneration."}